{"version":3,"sources":["NavigationBar/NavigationBar.js","Rectangle/Rectangle.js","UserInput/UserInput.js","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","props","className","style","fontWeight","htmlFor","name","id","onChange","algo","value","algoVal","disabled","canSort","onClick","sort","slowDown","speedUp","Rectangle","height","val","UserInput","type","change","App","state","nums","speed","delay","ms","Promise","resolve","setState","setTimeout","bubbleSortHandler","a","console","log","i","length","flag","j","temp","alert","insertionSortHandler","x","selectionSortHandler","k","merge","l","m","r","n1","n2","L","R","push","Number","mergeSortHandler","n","curr_size","left_start","mid","Math","min","right_end","partition","h","quickSortHandler","top","stack","p","algorithmExecutionHandler","event","algorithmSelectionHandler","newAlgo","target","inputChangedHandler","valArr","split","isNaN","newNums","map","v","index","slowDownHandler","speedUpHandler","rect","margin","width","this","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.036098aa.chunk.js","sourcesContent":["import React from 'react';\nimport './NavigationBar.css';\n\nconst NavigationBar = (props) => {\n    const appName = {\n        fontWeight: 'bold'\n    }\n    return (\n        <div className=\"NavigationBar\">\n            <div className=\"ele\"><p style={appName}>Sorting Visualizer</p></div>\n            <div className=\"ele\">\n                <label htmlFor=\"algo\">Algorithm: </label>\n                <select \n                    name=\"algo\" \n                    id=\"algo\" \n                    onChange={props.algo} \n                    value={props.algoVal} \n                    disabled={props.canSort}>\n                    <option value=\"0\">Bubble Sort</option>\n                    <option value=\"1\">Insertion Sort</option>\n                    <option value=\"2\">Selection Sort</option>\n                    <option value=\"3\">Merge Sort</option>\n                    <option value=\"4\">Quick Sort</option>\n                </select>\n            </div>\n            <button className=\"buttton\" onClick={props.sort} disabled={props.canSort}>Sort</button>\n            <div className=\"ele\">\n                <label>Speed: </label>\n                <button className=\"buttton\" onClick={props.slowDown}>Slow</button>\n                <button className=\"buttton\" onClick={props.speedUp}>Fast</button>\n            </div>\n        </div>\n    );\n};\n\nexport default NavigationBar;","import React from 'react';\nimport './Rectangle.css';\n\nconst Rectangle = (props) => {\n    const style = {\n        height: 10*props.val\n    }\n    return (\n        <div className=\"Rectangle\" style={style} val={props.val}>\n            <label>{props.val}</label>\n        </div>\n    );\n};\n\nexport default Rectangle;","import React from 'react';\nimport './UserInput.css';\n\nconst UserInput = (props) => {\n    return (\n        <div className=\"UserInput\">\n            <label htmlFor=\"customInput\">\n                Custom Input: (Ex: 10,9,9,20) </label>\n            <input \n                name=\"customInput\" \n                id=\"customInput\"  \n                type=\"text\" \n                onChange={props.change} />\n        </div>\n    );\n};\n\nexport default UserInput;","import React, { Component } from 'react';\nimport './App.css';\nimport NavigationBar from './NavigationBar/NavigationBar';\nimport Rectangle from './Rectangle/Rectangle';\nimport UserInput from './UserInput/UserInput';\n\nclass App extends Component\n{\n  state = {\n    nums: [\n      {id: 0, val: 10},\n      {id: 1, val: 20},\n      {id: 2, val: 3},\n      {id: 3, val: 50},\n      {id: 4, val: 8},\n      {id: 5, val: 6},\n      {id: 6, val: 6},\n      {id: 7, val: 8},\n      {id: 8, val: 9},\n      {id: 9, val: 10}\n    ],\n    algoVal : \"0\",\n    canSort : true,\n    speed: 300\n  };\n  delay = (ms,nums)=> {\n    return new Promise((resolve) => {\n      this.setState({nums:nums});\n      setTimeout(resolve, ms)});\n  }\n  bubbleSortHandler = async () => {\n    let nums = [...this.state.nums];\n    console.log(nums);\n    for (let i = 0; i < nums.length-1; i++) {\n      let flag = 0;\n      for(let j=0;j<nums.length-1-i;j++)\n      {\n        if(nums[j].val>nums[j+1].val)\n          {\n            let temp = nums[j].val;\n            nums[j].val = nums[j+1].val;\n            nums[j+1].val = temp;\n            flag=1;\n            await this.delay(this.state.speed,nums);\n          }\n      }\n      if(flag===0)\n      {\n        break;\n      }\n    }\n    alert('Sorted!');\n  }\n  insertionSortHandler = async () => {\n    alert('Note: In Insertion Sort, for visual purposes, the value at a particular index is not directly placed at it\\'s optimal position');\n    let nums = [...this.state.nums];\n    let j = 0;\n    let x = 0;\n    for (let i = 1; i < nums.length; i++) {\n      j = i-1;\n      x = nums[i].val;\n      while(j>-1 && nums[j].val>x)\n      {\n        nums[j+1].val = nums[j].val;\n        nums[j].val = x;\n        await this.delay(this.state.speed,nums);\n        j--;\n      }\n    }\n    alert('Sorted!');\n  }\n  selectionSortHandler = async () => {\n    let nums = [...this.state.nums];\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    for (i = 0; i < nums.length-1; i++) {\n      k = i;\n      for (j= i; j < nums.length; j++) {\n        if(nums[j].val<nums[k].val)\n        {\n          k = j;\n        }\n      }\n      let temp = nums[i].val;\n      nums[i].val = nums[k].val;\n      nums[k].val = temp;\n      await this.delay(this.state.speed,nums);\n    }\n    alert('Sorted!');\n  }\n  merge = async (nums, l, m, r) => {\n    let i, j, k; \n    let n1 = m - l + 1; \n    let n2 =  r - m; \n  \n    let L = [];\n    let R = [];\n  \n    for (i = 0; i < n1; i++) \n    {\n      L.push(Number(nums[l + i].val)); \n    }\n    for (j = 0; j < n2; j++) \n    {\n      R.push(Number(nums[m + 1+ j].val)); \n    }\n  \n    i = 0; \n    j = 0; \n    k = l; \n    while (i < n1 && j < n2) \n    { \n      if (L[i] <= R[j]) \n      { \n        nums[k].val = L[i]; \n        i++; \n      } \n      else\n      { \n        nums[k].val = R[j]; \n        j++; \n      } \n      k++; \n      await this.delay(this.state.speed,nums);\n    } \n\n    while (i < n1) \n    { \n      nums[k].val = L[i]; \n      i++; \n      k++; \n      await this.delay(this.state.speed,nums);\n    } \n    while (j < n2) \n    { \n      nums[k].val = R[j]; \n      j++; \n      k++; \n      await this.delay(this.state.speed,nums);\n    } \n  }\n  mergeSortHandler = async () => {\n    let nums = [...this.state.nums];\n    let n = nums.length;\n    let curr_size;\n    let left_start;\n    for (curr_size=1; curr_size<=n-1; curr_size = 2*curr_size) \n    { \n      for (left_start=0; left_start<n-1; left_start += 2*curr_size) \n      { \n        let mid = Math.min(left_start + curr_size - 1, n-1); \n        let right_end = Math.min(left_start + 2*curr_size - 1, n-1); \n        await this.merge(nums, left_start, mid, right_end); \n      }\n    } \n    alert('Sorted!');\n  }\n  partition = async (nums, l, h) => {\n    let x = nums[h].val; \n    let i = (l - 1); \n  \n    for (let j = l; j <= h - 1; j++) { \n      if (nums[j].val <= x) { \n        i++; \n        let temp = nums[i].val;\n        nums[i].val = nums[j].val;\n        nums[j].val = temp;\n        await this.delay(this.state.speed,nums);\n      } \n    } \n    let temp = nums[i+1].val;\n    nums[i+1].val = nums[h].val;\n    nums[h].val = temp;\n    await this.delay(this.state.speed,nums);\n    return (i + 1); \n  }\n  quickSortHandler = async () => {\n    let nums = [...this.state.nums];\n    let h = nums.length-1;\n    let l=0;\n\n    let stack = [];\n    let top = -1; \n    stack[++top] = l; \n    stack[++top] = h; \n  \n    while (top >= 0) { \n      h = stack[top--]; \n      l = stack[top--]; \n\n      let p = await this.partition(nums, l, h); \n\n      if (p - 1 > l) { \n        stack[++top] = l; \n        stack[++top] = p - 1; \n      } \n      if (p + 1 < h) { \n        stack[++top] = p + 1; \n        stack[++top] = h; \n      } \n    }\n    alert('Sorted!'); \n  }\n  algorithmExecutionHandler = async (event) => {\n    let canSort = this.state.canSort;\n    this.setState({canSort:!canSort});\n    const algoVal = this.state.algoVal;\n    if(algoVal === \"0\")\n    {\n      await this.bubbleSortHandler();\n    }\n    else if(algoVal === \"1\")\n    {\n      await this.insertionSortHandler();\n    }\n    else if(algoVal === \"2\")\n    {\n      await this.selectionSortHandler();\n    }\n    else if(algoVal === \"3\")\n    {\n      await this.mergeSortHandler();\n    }\n    else if(algoVal === \"4\")\n    {\n      await this.quickSortHandler();\n    }\n    this.setState({canSort:canSort});\n  }\n  algorithmSelectionHandler = (event) => {\n    let newAlgo = event.target.value;\n    this.setState({algoVal:newAlgo});\n  }\n  inputChangedHandler = (event) => {\n    \n    const val = event.target.value;\n    const valArr = val.split(',');\n    for(let i=0;i<valArr.length;i++)\n    {\n      if(valArr.length > 20 || isNaN(Number(valArr[i])) || Number(valArr[i])<0 || Number(valArr[i])>50)\n      {\n        alert('Invalid input. Please provide values seperated by comma. Constraints: 0<=A[i]<=50 and length of array should be no more than 20.');\n        this.setState({nums:[{id:0, val:0}]});\n        event.target.value = 0;\n        return;\n      }\n    }\n    const newNums = valArr.map((v,index) => {\n      return {id: index, val: (v==='')?0:Number(v)};\n    });\n    this.setState({nums:newNums});\n  }\n  slowDownHandler = () => {\n    this.setState({speed:500});\n  }\n  speedUpHandler = () => {\n    this.setState({speed:100});\n  }\n  render()\n  {\n    const style = {\n      margin : '10px auto',\n      width: '50%'\n    };\n    \n    let rect = (\n      <div style={style}>\n        {this.state.nums.map((v) => {\n          return <Rectangle val={v.val} key={v.id} />\n        })}\n      </div>\n    )\n    return (\n      <div className=\"App\">\n        <NavigationBar \n          algoVal={this.state.algoVal} \n          sort={(event) => this.algorithmExecutionHandler(event)}\n          algo={(event) => {this.algorithmSelectionHandler(event)}}\n          canSort={!this.state.canSort}\n          slowDown={this.slowDownHandler}\n          speedUp={this.speedUpHandler} />\n          <UserInput \n            change={this.inputChangedHandler} />\n        {rect}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}